
SHOWRUNNER TO-DO LIST:



UI - 

Login page: Integrate authentication into UI placeholders -- Joel and Kevin

Search shows functionality: move search from search.ejs to navbar.ejs -- Joel mentioned last week that they were planning to work on this at some point soon.

Navbar: Add links to pages; control view based on authentication status -- during group meeting, we fixed a number of these but still need to test thoroughly before we're done.

Sidebars: Decide what's going here -- we can decide this once we have basic functionality working.

Profile Page: functionality TBD - maybe display username? -- we'll discuss this later - not as high priority



*******

DB and UI:

Delete a show from user.userShow array


Update show in user.userShow array
 --hasWatched (boolean)
-- favorite (boolean)

Watch Providers - work through how we're going to handle watch provider info for the shows in the user's list. -- Peter is going to append this to get showDetails


*******

BACKEND:

Update show details in DB - work through how we're going to do this so that information stays up to date (independent of user interaction so maybe a timed function like update config?) -- TBD


*******


Flow of Adding a Show: -- Peter and Aeridy to continue work on this section. 

1. Enter a search term and get results from TMDB: (TO-DO: Add a placeholder image to use when posterpath is null) *PETER TO POST PLACEHOLDER IMAGE*
--Enter search query and click search (currently on search page, moving to navbar?)
--Get search results from tmdb.searchTVShows({query})
--Return list of search results (search.ejs)

2. Choose a show from results and add it to the user's list of shows (TO-DO: PREVENT DUPLICATE) *test that null is prevented* *PETER TO RESEARCH PREVENT DUPLICATE AND AERIDY BLOCK "ADD SHOW" BUTTON IF SHOW ID IS IN REQ.USER*
--Click 'Add Show' next to desired show result to trigger '/addShow'
--Add the showId to the DB - user.userShows (users collection)

3. Determine behavior after user adds show. Currently going to '/shows' as a placeholder since there are more steps to perform before the show list is populated at '/home'. (TO-DO: Discuss/Implement)

4. Add the details about the selected show to the app's list of shows (not user specific) (TO-DO: IMPLEMENT) *This is the step that Aeridy is currently working on*
-- Get show from tmdb.tvShowDetails(showId)
-- Add tvShowDetails to the DB (shows collection) - consider upsert to prevent duplicates

5. Get data from DB to populate user's show list (TO-DO: IMPLEMENT)
-- get array of showIds from req.user.userShows
-- get array of show details from shows collection (this is the data for user shows display)

6. Display user's list of shows at '/home' (TO-DO: IMPLEMENT)
-- loop through array and display in home.ejs

NOTE: how do we want to handle configuration for image size since API call for show details does not happen at the same time as it's displayed to user?? Multiple shows displayed. (TO-DO: Discuss/Implement with applicable step)



